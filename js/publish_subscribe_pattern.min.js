var eventBus={},pubNsub=function(){},errorMessage="";pubNsub.prototype.subscribe=pubNsub.prototype.on=function(e,t){var n={eventName:e,eventHandler:t.bind(this),eventOriginator:this},s=this,o=!1;e in eventBus||(eventBus[e]=[]),o="undefined"!=typeof eventBus[e]&&eventBus[e].some(function(e,t){return thisEvt=e,e.eventOriginator==s}),o||eventBus[e].push(n),console.log("event subscribed..."),errorMessage="event subscribed..."},pubNsub.prototype.publish=pubNsub.prototype.emit=function(e,t){var n=this,s={},o="undefined"!=typeof eventBus[e]&&eventBus[e].some(function(e,t){return s=e,e.eventOriginator==n});e in eventBus&&o?(s.eventHandler.call(s.eventOriginator),console.log("event published...",t),errorMessage="event published..."+JSON.stringify(t)):(console.log("Attempt to 'publish/emit' the non-subscribed event with message [ ",JSON.stringify(t),"]"),errorMessage="Attempt to 'publish/emit' the non-subscribed event with message [ "+JSON.stringify(t)+" ]")},pubNsub.prototype.unsubscribe=pubNsub.prototype.off=function(e,t){var n=this,s=-1,o="undefined"!=typeof eventBus[e]&&eventBus[e].some(function(e,t){return thisEvt=e,e.eventOriginator==n});o?(eventBus[e].some(function(e,t){e.eventOriginator==n&&(s=t)}),s>=0&&eventBus[e].splice(s,1),console.log("event unsubscribed..."),errorMessage="event unsubscribed..."):(console.log("Attempt to 'unsubscribe/off' for the event [",e,"] which has not been subscribed for the instance"),errorMessage="Attempt to 'unsubscribe/off' for the event ["+e+"] which has not been subscribed for the instance")};